<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.atguigu.springcloud</groupId>
  <artifactId>microservicecloud</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <java.version>1.8</java.version>
    <!-- SpringCloud的版本号Hoxton.SR8是以英国伦敦地铁站的站台名字,很搞笑 -->
    <spring-cloud.version>Dalston.SR1</spring-cloud.version>
    <lombok.version>1.16.20</lombok.version>
    <junit.version>4.12</junit.version>
    <log4j.version>1.2.17</log4j.version>
  </properties>
  
  <dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-dependencies</artifactId>
			<version>${spring-cloud.version}</version>
			<type>pom</type>
			<scope>import</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-dependencies</artifactId>
			<version>1.5.9.RELEASE</version>
			<type>pom</type>
			<scope>import</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.0.4</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.0.31</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>1.3.0</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>1.2.3</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>
	</dependencies>
 </dependencyManagement>
 <build>
 	<finalName>microservicecloud</finalName><!-- 父类的工程名字 -->
 	<resources>
 		<resource><!-- 运行Maven访问src/main/resources下面的资源,并开启过滤 -->
 			<directory>src/main/resources</directory>
 			<filtering>true</filtering>
 		</resource>
 	</resources>
 	<plugins>
 		<plugin><!-- 这个插件就是负责解析和解读的 -->
 			<groupId>org.apache.maven.plugins</groupId>
 			<artifactId>maven-resources-plugin</artifactId>
 			<configuration><!-- 以$开头的或者以$结尾的配置文件在src/main/resources目录下面的我就可以读取 -->
 				<delimiters>$</delimiters>
 			</configuration>
 		</plugin>
 	</plugins>
 </build>
  <modules>
  	<module>microservicecloud-api</module>
  	<module>microservicecloud-provider-dept-8001</module>
  	<module>microservicecloud-consumer-dept-80</module>
  	<module>microservicecloud-eureka-7001</module>
  	<module>microservicecloud-eureka-7002</module>
  	<module>microservicecloud-eureka-7003</module>
  	<module>microservicecloud-provider-dept-8002</module>
  	<module>microservicecloud-provider-dept-8003</module>
  	<module>microservicecloud-consumer-dept-feign</module>
  	<module>microservicecloud-provider-dept-hystrix-8001</module>
  	<module>microservicecloud-consumer-hystrix-dashboard</module>
  </modules>
</project>